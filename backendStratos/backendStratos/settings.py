"""
Django settings for backendStratos project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import logging.config

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {module} - {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
            'level': 'INFO',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'cors-debug.log',
            'formatter': 'verbose',
            'level': 'DEBUG',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.request': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'corsheaders': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.server': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.template': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.security': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Instagram API Configuration
INSTAGRAM_ACCESS_TOKEN = 'EAAXEbHvvssoBO6mEULC5OHw9d4qAKhPVC8WdiTQZBIfqCA11Wy5jlXGimUKKSZARilT2chSYNj3fZAsBKOLIfCBcqHqtwnZBu0GJQzsQS5baATc8aG5q8NtMuS9wWalbEqPIZBfDyaObtxV59uk28vZAJbIarrzd02I52vdUMXoeRj8tRMX1vktrFZABEKoko70wr9yspNZAdYmMZABkns3Js6JT8zz4ZD'  # Replace with your actual access token

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%5le_@gd7irhbox$kb$-ctek$)$^t2+d98_v&k)xe0sotpai&0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'  # Environment-aware DEBUG setting

ALLOWED_HOSTS = ['3.74.166.136', 'localhost', '127.0.0.1', '0.0.0.0', 'dev.d2lv8dn21inij8.amplifyapp.com', 'api.stratosgaming.com','stratos-api-stg.stratosgaming.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'rest_framework',
    'userModule',
    'corsheaders',
    'userAuth',
    'projectsModule',
    'Mailing',
    'Apis',
]


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",     # ‚Üê move to very top
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware", # keep if you use Django Admin
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "backendStratos.middleware.CSPMiddleware",
]

ROOT_URLCONF = 'backendStratos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, r'build/static')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backendStratos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'stratosDB', 
#        'USER': 'postgres',
#        'PASSWORD': 'Stratos',
#        'HOST': '127.0.0.1', 
#        'PORT': '5432',
#    }
#}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DB_NAME', 'stratosdb'),
        'USER': os.environ.get('DB_USER', 'postgres'),
        'PASSWORD': os.environ.get('DB_PASSWORD', '*Stratos*2025'),
        'HOST': os.environ.get('DB_HOST', 'stratos-platform-staging.cha6kyqe6mav.eu-central-1.rds.amazonaws.com'),  # Imposta 'db' come host di default
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'build/static'),
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#accept all requests
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    "DEFAULT_AUTHENTICATION_CLASSES": ["userAuth.auth0.Auth0JWTAuthentication"],  
}

AUTH0_DOMAIN = os.getenv("AUTH0_DOMAIN", "dev-bye2jfyt8iz1nehc.us.auth0.com")
AUTH0_AUDIENCE = os.getenv("AUTH0_AUDIENCE", "stratos-api-stg.stratosgaming.com")
AUTH0_ISSUER = f"https://{AUTH0_DOMAIN}/"
AUTH0_ALGORITHMS = ["RS256"]
AUTH0_CLIENT_IDS = [s.strip() for s in os.getenv("AUTH0_CLIENT_IDS", "").split(",") if s.strip()]

# CORS settings - Subdomain aware
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_CREDENTIALS = False

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "https://dev.d2lv8dn21inij8.amplifyapp.com",
    "https://stratosgaming.com",
    "https://www.stratosgaming.com",
    "https://development.stratosgaming.com",
]

CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https?://([a-z0-9-]+\.)*stratosgaming\.com$",
    r"^https?://([a-z0-9-]+\.)*stratosgaming\.it$",
]

CORS_ALLOW_HEADERS = [
    "authorization",
    "content-type",
    "accept",
    "origin",
    "user-agent",
    "x-requested-with",
    "dnt",
    "x-csrftoken",   # only needed if you still POST to Django admin, etc.
    "x-id-token",
]
CORS_EXPOSE_HEADERS = ["Content-Type"]
CORS_URLS_REGEX = r"^/.*$"


# CSRF settings - Subdomain aware
CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = "Lax"
CSRF_USE_SESSIONS = False
# If you serve admin on *.com but also hit *.it, you can drop domain pinning:
CSRF_COOKIE_DOMAIN = None
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "https://*.stratosgaming.com",
]
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_DOMAIN = None

SESSION_COOKIE_AGE = 1209600  # 2 weeks

#EMAILS DATA
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'info@stratosgaming.it'
EMAIL_HOST_PASSWORD = 'tkfp abpa lfau whnm'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# OAuth Settings
GOOGLE_OAUTH_CLIENT_ID = os.environ.get('GOOGLE_OAUTH_CLIENT_ID', '')

# CSRF trusted origins - Include all subdomains
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:5173',
    'http://localhost:5371',
    'http://3.74.166.136:5371',
    'http://3.74.166.136',
    'http://127.0.0.1:5173',
    'http://127.0.0.1:5371',
    'https://dev.d2lv8dn21inij8.amplifyapp.com',
    'https://api.stratosgaming.com',
    'https://stratosgaming.com',
    'https://www.stratosgaming.com',
    'https://development.stratosgaming.com',  # Add development subdomain
]

# Add regex pattern to trust all stratosgaming.com subdomains
CSRF_TRUSTED_ORIGIN_REGEXES = [
    r"^https?://([a-z0-9-]+\.)*stratosgaming\.com$",  # Trust all subdomains
]

# settings.py
AUTH0_NS = "https://stratosgaming.it/claims"
AUTH0_EMAIL_CLAIM = f"{AUTH0_NS}/email"
AUTH0_EMAIL_VERIFIED_CLAIM = f"{AUTH0_NS}/email_verified"
AUTH0_NAME_CLAIM = f"{AUTH0_NS}/name"
AUTH0_GIVEN_CLAIM = f"{AUTH0_NS}/given_name"
AUTH0_FAMILY_CLAIM = f"{AUTH0_NS}/family_name"
AUTH0_PICTURE_CLAIM = f"{AUTH0_NS}/picture"
AUTH0_PERMS_CLAIM = f"{AUTH0_NS}/permissions"
