# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
name: stratos-backend

services:
  server:
    image: jacopicci/stratos-backend-server
    build:
      context: .
    ports:
      - 5371:5371
    #depends_on:
    #  - db
    environment:
      - DB_HOST=stratosdb-aws.cha6kyqe6mav.eu-central-1.rds.amazonaws.com
      - DB_PORT=5432
      - DB_NAME=stratosDB
      - DB_USER=postgres
      - DB_PASSWORD=Stratos123
    # Add a volume mount for development
    volumes:
      - ./backendStratos:/app/backendStratos
    # You can keep the watch section if using Docker Compose v2.22.0+
    develop:
      watch:
        - action: sync
          path: ./backendStratos
          target: /app/backendStratos
          ignore:
            - node_modules/
            - __pycache__/  
  #db:
  #  image: postgres:latest
  #  environment:
  #    POSTGRES_DB: stratosDB
  #    POSTGRES_USER: postgres
  #    POSTGRES_PASSWORD: Stratos
  #  ports:
  #    - "5432:5432"
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: jacopicci@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Stratos
    ports:
      - "5050:80"

# Define named volumes
volumes:
  postgres_data:
